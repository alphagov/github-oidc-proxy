platform: linux
image_resource:
  type: registry-image
  source:
    repository: governmentpaas/terraform
    tag: sha256:4db24e98d6585ba2466c47f502f346b843db17b83d49303ce0cfb93c54a5a11f  # terraform 0.14.4
inputs:
- name: github-oidc-proxy-git
- name: allowed-ips-git
  optional: true
outputs:
- name: terraform-outputs
params:
  TERRAFORM_STATE_BUCKET:
  TERRAFORM_STATE_REGION:
  ENVIRONMENT_NAME:
  DEPLOYER_ROLE_ARN:
  ALLOWED_IPS_TF_MODULE_PATH:
run:
  dir: github-oidc-proxy-git/terraform
  path: /bin/ash
  args:
    - -e
    - -c
    - |
      export TF_VAR_deployer_role_arn="${DEPLOYER_ROLE_ARN}"
      export TF_VAR_environment_name=" "

      ALLOWED_IPS_TARGET="../../allowed-ips-git/${ALLOWED_IPS_TF_MODULE_PATH}"
      if [ -e $ALLOWED_IPS_TARGET ] ; then
        echo "Symlinking allowed-ips module..."
        rm -r ./modules/allowed-ips
        ln -s "../${ALLOWED_IPS_TARGET}" ./modules/allowed-ips
      fi

      BACKEND_DEPLOYER_ROLE_ARN_ARG=''
      if [ -n "$(echo $DEPLOYER_ROLE_ARN | tr -d '[:space:]')" ] ; then
        BACKEND_DEPLOYER_ROLE_ARN_ARG="-backend-config=role_arn=${DEPLOYER_ROLE_ARN}"
      fi

      terraform init -input=false \
        -backend-config "bucket=${TERRAFORM_STATE_BUCKET}" \
        -backend-config "key=github-oidc-proxy-${ENVIRONMENT_NAME}.tfstate" \
        -backend-config "region=${TERRAFORM_STATE_REGION}" \
        $BACKEND_DEPLOYER_ROLE_ARN_ARG

      terraform plan -out terraform.plan -input=false
      terraform apply -auto-approve -input=false terraform.plan
      terraform output -json > ../../terraform-outputs/outputs.json
